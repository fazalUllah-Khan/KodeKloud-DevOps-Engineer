One of the DevOps engineers was trying to deploy a python app on Kubernetes cluster. Unfortunately, due to some mis-configuration, the application is not coming up. Please take a look into it and fix the issues. Application should be accessible on the specified nodePort.


1.	The deployment name is python-deployment-xfusion, its using poroko/flask-demo-appimage. The deployment and service of this app is already deployed.
2.	nodePort should be 32345 and targetPort should be python flask app's default port.

Note: The kubectl on jump_host has been configured to work with the kubernetes cluster.

# Solution:
thor@jump_host ~$ kubectl get all 
NAME                                             READY   STATUS             RESTARTS   AGE
pod/python-deployment-xfusion-5dcd4fff84-z8vld   0/1     ImagePullBackOff   0          2m56s

NAME                             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
service/kubernetes               ClusterIP   10.96.0.1       <none>        443/TCP          38m
service/python-service-xfusion   NodePort    10.96.197.178   <none>        8080:32345/TCP   2m56s

NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/python-deployment-xfusion   0/1     1            0           2m56s

NAME                                                   DESIRED   CURRENT   READY   AGE
replicaset.apps/python-deployment-xfusion-5dcd4fff84   1         1         0       2m56s
thor@jump_host ~$ kubectl get po
NAME                                         READY   STATUS         RESTARTS   AGE
python-deployment-xfusion-5dcd4fff84-z8vld   0/1     ErrImagePull   0          3m10s
thor@jump_host ~$ kubectl logs python-deployment-xfusion-5dcd4fff84-z8vld
Error from server (BadRequest): container "python-container-xfusion" in pod "python-deployment-xfusion-5dcd4fff84-z8vld" is waiting to start: trying and failing to pull image
thor@jump_host ~$ kubectl describe pod/python-deployment-xfusion-5dcd4fff84-z8vld
Name:             python-deployment-xfusion-5dcd4fff84-z8vld
Namespace:        default
Priority:         0
Service Account:  default
Node:             kodekloud-control-plane/172.17.0.2
Start Time:       Fri, 05 Apr 2024 17:02:10 +0000
Labels:           app=python_app
                  pod-template-hash=5dcd4fff84
Annotations:      <none>
Status:           Pending
IP:               10.244.0.5
IPs:
  IP:           10.244.0.5
Controlled By:  ReplicaSet/python-deployment-xfusion-5dcd4fff84
Containers:
  python-container-xfusion:
    Container ID:   
    Image:          poroko/flask-app-demo
    Image ID:       
    Port:           5000/TCP
    Host Port:      0/TCP
    State:          Waiting
      Reason:       ImagePullBackOff
    Ready:          False
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-cq2pt (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  kube-api-access-cq2pt:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                    From               Message
  ----     ------     ----                   ----               -------
  Normal   Scheduled  4m23s                  default-scheduler  Successfully assigned default/python-deployment-xfusion-5dcd4fff84-z8vld to kodekloud-control-plane
  Normal   Pulling    2m54s (x4 over 4m21s)  kubelet            Pulling image "poroko/flask-app-demo"
  Warning  Failed     2m54s (x4 over 4m21s)  kubelet            Failed to pull image "poroko/flask-app-demo": rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/poroko/flask-app-demo:latest": failed to resolve reference "docker.io/poroko/flask-app-demo:latest": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
  Warning  Failed     2m54s (x4 over 4m21s)  kubelet            Error: ErrImagePull
  Warning  Failed     2m29s (x6 over 4m21s)  kubelet            Error: ImagePullBackOff
  Normal   BackOff    2m14s (x7 over 4m21s)  kubelet            Back-off pulling image "poroko/flask-app-demo"
thor@jump_host ~$ kubectl edit deployment/python-deployment-devops
Error from server (NotFound): deployments.apps "python-deployment-devops" not found
thor@jump_host ~$ kubectl edit deployment.apps/python-deployment-xfusion
deployment.apps/python-deployment-xfusion edited
thor@jump_host ~$ kubectl get po
NAME                                         READY   STATUS             RESTARTS   AGE
python-deployment-xfusion-5dcd4fff84-z8vld   0/1     ImagePullBackOff   0          7m38s
python-deployment-xfusion-f5566f59-fhpq9     0/1     ErrImagePull       0          5s
thor@jump_host ~$ kubectl get po
NAME                                         READY   STATUS             RESTARTS   AGE
python-deployment-xfusion-5dcd4fff84-z8vld   0/1     ImagePullBackOff   0          7m43s
python-deployment-xfusion-f5566f59-fhpq9     0/1     ErrImagePull       0          10s
thor@jump_host ~$ kubectl get po
NAME                                         READY   STATUS             RESTARTS   AGE
python-deployment-xfusion-5dcd4fff84-z8vld   0/1     ImagePullBackOff   0          7m56s
python-deployment-xfusion-f5566f59-fhpq9     0/1     ImagePullBackOff   0          23s
thor@jump_host ~$ kubectl edit deployment.apps/python-deployment-xfusion
deployment.apps/python-deployment-xfusion edited
thor@jump_host ~$ kubectl get po
NAME                                         READY   STATUS              RESTARTS   AGE
python-deployment-xfusion-74f98d699b-v789t   0/1     ContainerCreating   0          3s
python-deployment-xfusion-f5566f59-fhpq9     0/1     ErrImagePull        0          69s
thor@jump_host ~$ kubectl get po
NAME                                         READY   STATUS              RESTARTS   AGE
python-deployment-xfusion-74f98d699b-v789t   0/1     ContainerCreating   0          6s
python-deployment-xfusion-f5566f59-fhpq9     0/1     ImagePullBackOff    0          72s
thor@jump_host ~$ kubectl edit deployment.apps/python-deployment-xfusion
Edit cancelled, no changes made.
thor@jump_host ~$ kubectl get po
NAME                                         READY   STATUS    RESTARTS   AGE
python-deployment-xfusion-74f98d699b-v789t   1/1     Running   0          3m13s
thor@jump_host ~$ kubectl logs python-deployment-xfusion-74f98d699b-v789t
 * Serving Flask app "app.py"
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
thor@jump_host ~$ k get svc
NAME                     TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
kubernetes               ClusterIP   10.96.0.1       <none>        443/TCP          48m
python-service-xfusion   NodePort    10.96.197.178   <none>        8080:32345/TCP   13m
thor@jump_host ~$ kubectl get svc python-service-xfusion -o yaml > python-service-xfusion.yml
thor@jump_host ~$ vi python-service-xfusion.yml
thor@jump_host ~$ k create -f  python-service-xfusion.yml
The Service "python-service-xfusion" is invalid: spec.clusterIPs: Invalid value: []string{"10.96.197.178"}: failed to allocate IP 10.96.197.178: provided IP is already allocated
thor@jump_host ~$ k apply -f  python-service-xfusion.yml
service/python-service-xfusion configured
thor@jump_host ~$ kubectl get po
NAME                                         READY   STATUS    RESTARTS   AGE
python-deployment-xfusion-74f98d699b-v789t   1/1     Running   0          8m9s
thor@jump_host ~$ kubectl get svc
NAME                     TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
kubernetes               ClusterIP   10.96.0.1       <none>        443/TCP          52m
python-service-xfusion   NodePort    10.96.197.178   <none>        5000:32345/TCP   16m
thor@jump_host ~$ kubectl get deploy
NAME                        READY   UP-TO-DATE   AVAILABLE   AGE
python-deployment-xfusion   1/1     1            1           16m
thor@jump_host ~$ kubectl logs python-deployment-xfusion-74f98d699b-v789t
 * Serving Flask app "app.py"
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
thor@jump_host ~$ vi python-deployment-xfusion
thor@jump_host ~$ vi python-service-xfusion.yml
thor@jump_host ~$ cat python-service-xfusion.yml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"python-service-xfusion","namespace":"default"},"spec":{"ports":[{"nodePort":32345,"port":8080}],"selector":{"app":"python_app"},"type":"NodePort"}}
  creationTimestamp: "2024-04-05T17:02:10Z"
  name: python-service-xfusion
  namespace: default
  resourceVersion: "3190"
  uid: 1cfebd49-7df6-44de-9423-b7e9fef11531
spec:
  clusterIP: 10.96.197.178
  clusterIPs:
  - 10.96.197.178
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 32345
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: python_app
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
thor@jump_host ~$ kubectl get deploy python-deployment-xfusion  -o yaml > python-deployment-xfusion.yml 
thor@jump_host ~$ cat python-deployment-xfusion.ymlapiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"python-deployment-xfusion","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"python_app"}},"template":{"metadata":{"labels":{"app":"python_app"}},"spec":{"containers":[{"image":"poroko/flask-app-demo","name":"python-container-xfusion","ports":[{"containerPort":5000}]}]}}}}
  creationTimestamp: "2024-04-05T17:02:10Z"
  generation: 3
  name: python-deployment-xfusion
  namespace: default
  resourceVersion: "4040"
  uid: 61ea025c-aecc-4696-99c9-fb95479b78e6
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: python_app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: python_app
    spec:
      containers:
      - image: poroko/flask-demo-app
        imagePullPolicy: Always
        name: python-container-xfusion
        ports:
        - containerPort: 5000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-04-05T17:11:12Z"
    lastUpdateTime: "2024-04-05T17:11:12Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2024-04-05T17:02:10Z"
    lastUpdateTime: "2024-04-05T17:11:13Z"
    message: ReplicaSet "python-deployment-xfusion-74f98d699b" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
thor@jump_host ~$
